/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155Receiver,
  ERC1155ReceiverInterface,
} from "../../contracts/ERC1155Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "recRetval",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "recReverts",
        type: "bool",
      },
      {
        internalType: "bytes4",
        name: "batRetval",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "batReverts",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "BatchReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010773803806200107783398181016040528101906200003791906200023c565b620000576200004b620000d160201b60201c565b620000d960201b60201c565b83600060146101000a81548163ffffffff021916908360e01c021790555082600060186101000a81548160ff02191690831515021790555081600060196101000a81548163ffffffff021916908360e01c0217905550806000601d6101000a81548160ff02191690831515021790555050505050620002ae565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620001d981620001a2565b8114620001e557600080fd5b50565b600081519050620001f981620001ce565b92915050565b60008115159050919050565b6200021681620001ff565b81146200022257600080fd5b50565b60008151905062000236816200020b565b92915050565b600080600080608085870312156200025957620002586200019d565b5b60006200026987828801620001e8565b94505060206200027c8782880162000225565b93505060406200028f87828801620001e8565b9250506060620002a28782880162000225565b91505092959194509250565b610db980620002be6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063715018a6146100975780638da5cb5b146100a1578063bc197c81146100bf578063f23a6e61146100ef578063f2fde38b1461011f575b600080fd5b610081600480360381019061007c91906105e2565b61013b565b60405161008e919061062a565b60405180910390f35b61009f6101a5565b005b6100a961022d565b6040516100b69190610686565b60405180910390f35b6100d960048036038101906100d49190610788565b610256565b6040516100e69190610873565b60405180910390f35b610109600480360381019061010491906108c4565b61030c565b6040516101169190610873565b60405180910390f35b6101396004803603810190610134919061095e565b6103bc565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6101ad6104b4565b73ffffffffffffffffffffffffffffffffffffffff166101cb61022d565b73ffffffffffffffffffffffffffffffffffffffff1614610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906109e8565b60405180910390fd5b61022b60006104bc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080601d9054906101000a900460ff16156102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e90610a7a565b60405180910390fd5b7f0bcad9224ba33b574e9c85298de2f44b4c80015a21aa5df474896444909863d889898989898989895a6040516102e699989796959493929190610b79565b60405180910390a1600060199054906101000a900460e01b905098975050505050505050565b60008060189054906101000a900460ff161561035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610c67565b60405180910390fd5b7f20dfa9f79060c8c4d7fe892c97c71bcf6e3b63d1dcf66fea7aefc0211628cf298787878787875a6040516103989796959493929190610c87565b60405180910390a1600060149054906101000a900460e01b90509695505050505050565b6103c46104b4565b73ffffffffffffffffffffffffffffffffffffffff166103e261022d565b73ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f906109e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610d63565b60405180910390fd5b6104b1816104bc565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6105bf8161058a565b81146105ca57600080fd5b50565b6000813590506105dc816105b6565b92915050565b6000602082840312156105f8576105f7610580565b5b6000610606848285016105cd565b91505092915050565b60008115159050919050565b6106248161060f565b82525050565b600060208201905061063f600083018461061b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067082610645565b9050919050565b61068081610665565b82525050565b600060208201905061069b6000830184610677565b92915050565b6106aa81610665565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106f2576106f16106cd565b5b8235905067ffffffffffffffff81111561070f5761070e6106d2565b5b60208301915083602082028301111561072b5761072a6106d7565b5b9250929050565b60008083601f840112610748576107476106cd565b5b8235905067ffffffffffffffff811115610765576107646106d2565b5b602083019150836001820283011115610781576107806106d7565b5b9250929050565b60008060008060008060008060a0898b0312156107a8576107a7610580565b5b60006107b68b828c016106b8565b98505060206107c78b828c016106b8565b975050604089013567ffffffffffffffff8111156107e8576107e7610585565b5b6107f48b828c016106dc565b9650965050606089013567ffffffffffffffff81111561081757610816610585565b5b6108238b828c016106dc565b9450945050608089013567ffffffffffffffff81111561084657610845610585565b5b6108528b828c01610732565b92509250509295985092959890939650565b61086d8161058a565b82525050565b60006020820190506108886000830184610864565b92915050565b6000819050919050565b6108a18161088e565b81146108ac57600080fd5b50565b6000813590506108be81610898565b92915050565b60008060008060008060a087890312156108e1576108e0610580565b5b60006108ef89828a016106b8565b965050602061090089828a016106b8565b955050604061091189828a016108af565b945050606061092289828a016108af565b935050608087013567ffffffffffffffff81111561094357610942610585565b5b61094f89828a01610732565b92509250509295509295509295565b60006020828403121561097457610973610580565b5b6000610982848285016106b8565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109d260208361098b565b91506109dd8261099c565b602082019050919050565b60006020820190508181036000830152610a01816109c5565b9050919050565b7f4552433131353552656365697665724d6f636b3a20726576657274696e67206f60008201527f6e20626174636820726563656976650000000000000000000000000000000000602082015250565b6000610a64602f8361098b565b9150610a6f82610a08565b604082019050919050565b60006020820190508181036000830152610a9381610a57565b9050919050565b600082825260208201905092915050565b600080fd5b82818337600083830152505050565b6000610acb8385610a9a565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610afe57610afd610aab565b5b602083029250610b0f838584610ab0565b82840190509392505050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b6000610b498385610b1b565b9350610b56838584610ab0565b610b5f83610b2c565b840190509392505050565b610b738161088e565b82525050565b600060c082019050610b8e600083018c610677565b610b9b602083018b610677565b8181036040830152610bae81898b610abf565b90508181036060830152610bc3818789610abf565b90508181036080830152610bd8818587610b3d565b9050610be760a0830184610b6a565b9a9950505050505050505050565b7f4552433131353552656365697665724d6f636b3a20726576657274696e67206f60008201527f6e20726563656976650000000000000000000000000000000000000000000000602082015250565b6000610c5160298361098b565b9150610c5c82610bf5565b604082019050919050565b60006020820190508181036000830152610c8081610c44565b9050919050565b600060c082019050610c9c600083018a610677565b610ca96020830189610677565b610cb66040830188610b6a565b610cc36060830187610b6a565b8181036080830152610cd6818587610b3d565b9050610ce560a0830184610b6a565b98975050505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d4d60268361098b565b9150610d5882610cf1565b604082019050919050565b60006020820190508181036000830152610d7c81610d40565b905091905056fea26469706673582212204ce6cb206f8418d8c079572dad3ec17df68cf6d0ae44a1f73f1e2dd6a1acc1ee64736f6c63430008080033";

type ERC1155ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Receiver__factory extends ContractFactory {
  constructor(...args: ERC1155ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    recRetval: BytesLike,
    recReverts: boolean,
    batRetval: BytesLike,
    batReverts: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Receiver> {
    return super.deploy(
      recRetval,
      recReverts,
      batRetval,
      batReverts,
      overrides || {}
    ) as Promise<ERC1155Receiver>;
  }
  override getDeployTransaction(
    recRetval: BytesLike,
    recReverts: boolean,
    batRetval: BytesLike,
    batReverts: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      recRetval,
      recReverts,
      batRetval,
      batReverts,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Receiver {
    return super.attach(address) as ERC1155Receiver;
  }
  override connect(signer: Signer): ERC1155Receiver__factory {
    return super.connect(signer) as ERC1155Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155ReceiverInterface {
    return new utils.Interface(_abi) as ERC1155ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Receiver {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Receiver;
  }
}
