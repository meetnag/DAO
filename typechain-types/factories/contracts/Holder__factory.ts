/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Holder, HolderInterface } from "../../contracts/Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC1155",
        name: "ERC1155Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001055380380620010558339818101604052810190620000379190620001e9565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b6000620001b18262000190565b9050919050565b620001c381620001a4565b8114620001cf57600080fd5b50565b600081519050620001e381620001b8565b92915050565b6000602082840312156200020257620002016200016b565b5b60006200021284828501620001d2565b91505092915050565b610e2a806200022b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063bc197c81146100f6578063f23a6e6114610126578063f2fde38b146101565761007d565b806301ffc9a71461008257806355c57371146100b2578063715018a6146100ce575b600080fd5b61009c600480360381019061009791906106b0565b610172565b6040516100a991906106f8565b60405180910390f35b6100cc60048036038101906100c79190610749565b6101ec565b005b6100d661033b565b005b6100e06103c3565b6040516100ed91906107ca565b60405180910390f35b610110600480360381019061010b9190610a1f565b6103ec565b60405161011d9190610afd565b60405180910390f35b610140600480360381019061013b9190610b18565b610401565b60405161014d9190610afd565b60405180910390f35b610170600480360381019061016b9190610baf565b610416565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e557506101e48261050e565b5b9050919050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30856040518363ffffffff1660e01b8152600401610249929190610beb565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610c29565b10156102a457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a303385856040518563ffffffff1660e01b81526004016103059493929190610c8d565b600060405180830381600087803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b505050505050565b610343610578565b73ffffffffffffffffffffffffffffffffffffffff166103616103c3565b73ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae90610d42565b60405180910390fd5b6103c16000610580565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b61041e610578565b73ffffffffffffffffffffffffffffffffffffffff1661043c6103c3565b73ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610d42565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f990610dd4565b60405180910390fd5b61050b81610580565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61068d81610658565b811461069857600080fd5b50565b6000813590506106aa81610684565b92915050565b6000602082840312156106c6576106c561064e565b5b60006106d48482850161069b565b91505092915050565b60008115159050919050565b6106f2816106dd565b82525050565b600060208201905061070d60008301846106e9565b92915050565b6000819050919050565b61072681610713565b811461073157600080fd5b50565b6000813590506107438161071d565b92915050565b600080604083850312156107605761075f61064e565b5b600061076e85828601610734565b925050602061077f85828601610734565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b82525050565b60006020820190506107df60008301846107bb565b92915050565b6107ee816107a9565b81146107f957600080fd5b50565b60008135905061080b816107e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61085f82610816565b810181811067ffffffffffffffff8211171561087e5761087d610827565b5b80604052505050565b6000610891610644565b905061089d8282610856565b919050565b600067ffffffffffffffff8211156108bd576108bc610827565b5b602082029050602081019050919050565b600080fd5b60006108e66108e1846108a2565b610887565b90508083825260208201905060208402830185811115610909576109086108ce565b5b835b81811015610932578061091e8882610734565b84526020840193505060208101905061090b565b5050509392505050565b600082601f83011261095157610950610811565b5b81356109618482602086016108d3565b91505092915050565b600080fd5b600067ffffffffffffffff82111561098a57610989610827565b5b61099382610816565b9050602081019050919050565b82818337600083830152505050565b60006109c26109bd8461096f565b610887565b9050828152602081018484840111156109de576109dd61096a565b5b6109e98482856109a0565b509392505050565b600082601f830112610a0657610a05610811565b5b8135610a168482602086016109af565b91505092915050565b600080600080600060a08688031215610a3b57610a3a61064e565b5b6000610a49888289016107fc565b9550506020610a5a888289016107fc565b945050604086013567ffffffffffffffff811115610a7b57610a7a610653565b5b610a878882890161093c565b935050606086013567ffffffffffffffff811115610aa857610aa7610653565b5b610ab48882890161093c565b925050608086013567ffffffffffffffff811115610ad557610ad4610653565b5b610ae1888289016109f1565b9150509295509295909350565b610af781610658565b82525050565b6000602082019050610b126000830184610aee565b92915050565b600080600080600060a08688031215610b3457610b3361064e565b5b6000610b42888289016107fc565b9550506020610b53888289016107fc565b9450506040610b6488828901610734565b9350506060610b7588828901610734565b925050608086013567ffffffffffffffff811115610b9657610b95610653565b5b610ba2888289016109f1565b9150509295509295909350565b600060208284031215610bc557610bc461064e565b5b6000610bd3848285016107fc565b91505092915050565b610be581610713565b82525050565b6000604082019050610c0060008301856107bb565b610c0d6020830184610bdc565b9392505050565b600081519050610c238161071d565b92915050565b600060208284031215610c3f57610c3e61064e565b5b6000610c4d84828501610c14565b91505092915050565b600082825260208201905092915050565b50565b6000610c77600083610c56565b9150610c8282610c67565b600082019050919050565b600060a082019050610ca260008301876107bb565b610caf60208301866107bb565b610cbc6040830185610bdc565b610cc96060830184610bdc565b8181036080830152610cda81610c6a565b905095945050505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d2c602083610ce5565b9150610d3782610cf6565b602082019050919050565b60006020820190508181036000830152610d5b81610d1f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610dbe602683610ce5565b9150610dc982610d62565b604082019050919050565b60006020820190508181036000830152610ded81610db1565b905091905056fea264697066735822122053e1d2d1bbd590e96c04ef9c6e87896e9a08b575bce23e61f3b681f3f827631564736f6c63430008080033";

type HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Holder__factory extends ContractFactory {
  constructor(...args: HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ERC1155Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Holder> {
    return super.deploy(ERC1155Address, overrides || {}) as Promise<Holder>;
  }
  override getDeployTransaction(
    ERC1155Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ERC1155Address, overrides || {});
  }
  override attach(address: string): Holder {
    return super.attach(address) as Holder;
  }
  override connect(signer: Signer): Holder__factory {
    return super.connect(signer) as Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HolderInterface {
    return new utils.Interface(_abi) as HolderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Holder {
    return new Contract(address, _abi, signerOrProvider) as Holder;
  }
}
